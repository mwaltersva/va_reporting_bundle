{
	"aaData": [
		~[tlist_sql;
			SELECT
				school_name,
				AUT,
				DB,
				DD,
				ED,
				HI,
				ID,
				MD,
				OHI,
				OI,
				SLD,
				SLI,
				TBI,
				VI,
				LEAD (CASE WHEN school_name IS NOT NULL THEN chr(44) ELSE NULL END)
				OVER (ORDER BY high_grade, school_name ASC)
			FROM (
				SELECT
					schl.name school_name,
					decode(
						enr.disability_code,
						3,'MD',
						4,'OI',
						5,'VI',
						6,'HI',
						7,'SLD',
						8,'ED',
						9,'SLI',
						10,'OHI',
						12,'DB',
						13,'AUT',
						14,'TBI',
						16,'DD',
						19,'ID'
					) disability,
					enr.id studentid,
					schl.high_grade
				FROM (
					SELECT
						s.id,
						to_number(ps_customfields.getstudentscf(s.id, 'va_primary_dis_code')) disability_code,
						NVL(to_number(ps_customfields.getstudentscf(s.id, 'va_responsibleschool')),s.schoolid) schoolid
					FROM students s
					WHERE
						ps_customfields.getstudentscf(s.id, 'va_primary_dis_code') IS NOT NULL
						AND to_number(ps_customfields.getstudentscf(s.id, 'va_primary_dis_code')) <> 15
						~[if.~[gpv:snapShotDate]#]AND to_date('~[gpv:snapShotDate]','MM/DD/YYYY') BETWEEN s.entrydate AND s.exitdate[else]AND current_date BETWEEN s.entrydate AND s.exitdate[/if]
						~[if.is.a.school]AND s.schoolid = ~(curschoolid)[/if]
					UNION ALL
					SELECT
						re.studentid id,
						to_number(ps_customfields.getcf('reenrollments', re.id, 'va_primary_dis_code')),
						NVL(to_number(ps_customfields.getcf('reenrollments', re.id, 'va_responsibleschool')),re.schoolid) schoolid
					FROM reenrollments re
					WHERE
						ps_customfields.getcf('reenrollments', re.id, 'va_primary_dis_code') IS NOT NULL
						AND to_number(ps_customfields.getcf('reenrollments', re.id, 'va_primary_dis_code')) <> 15
						~[if.~[gpv:snapShotDate]#]AND to_date('~[gpv:snapShotDate]','MM/DD/YYYY') BETWEEN re.entrydate AND re.exitdate[else]AND current_date BETWEEN s.entrydate AND s.exitdate[/if]
						~[if.is.a.school]AND re.schoolid = ~(curschoolid)[/if]
				) enr
				JOIN schools schl ON schl.school_number = enr.schoolid
			) PIVOT (
				count(studentid)
				FOR disability IN (
					'AUT' AUT,
					'DB' DB,
					'DD' DD,
					'ED' ED,
					'HI' HI,
					'ID' ID,
					'MD' MD,
					'OHI' OHI,
					'OI' OI,
					'SLD' SLD,
					'SLI' SLI,
					'TBI' TBI,
					'VI' VI
				)
			) ORDER BY high_grade, school_name ASC;
		]{
			"school_name":"~(school_name)",
			"AUT":~(AUT),
			"DB":~(DB),
			"DD":~(DD),
			"ED":~(ED),
			"HI":~(HI),
			"ID":~(ID),
			"MD":~(MD),
			"OHI":~(OHI),
			"OI":~(OI),
			"SLD":~(SLD),
			"SLI":~(SLI),
			"TBI":~(TBI),
			"VI":~(VI)
		}~(comma)[/tlist_sql]
	],
	
	"aoColumns": [
		{"mDataProp":"school_name","sTitle":"School Name"},
		{"mDataProp":"AUT","sTitle":"AUT"},
		{"mDataProp":"DB","sTitle":"DB"},
		{"mDataProp":"DD","sTitle":"DD"},
		{"mDataProp":"ED","sTitle":"ED"},
		{"mDataProp":"HI","sTitle":"HI"},
		{"mDataProp":"ID","sTitle":"ID"},
		{"mDataProp":"MD","sTitle":"MD"},
		{"mDataProp":"OHI","sTitle":"OHI"},
		{"mDataProp":"OI","sTitle":"OI"},
		{"mDataProp":"SLD","sTitle":"SLD"},
		{"mDataProp":"SLI","sTitle":"SLI"},
		{"mDataProp":"TBI","sTitle":"TBI"},
		{"mDataProp":"VI","sTitle":"VI"}
	],
    "sDom": "T<\"H\"fr>t<\"F\"ip>",
    "oTableTools": {
        "sSwfPath": "/scripts/vrb/DataTables/extras/TableTools/media/swf/copy_csv_xls_pdf.swf"
    },
    "bJQueryUI": true,
    "bPaginate": false,
	"bFilter": false
}
