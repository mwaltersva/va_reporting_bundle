{
	"aaData": [
		~[tlist_sql;
			SELECT
				school_name,
				'<a data-school=\"' || school_number || '\" data-disability=\"AUT\" class=\"detail\">' || AUT || '</a>' AUT,
				'<a data-school=\"' || school_number || '\" data-disability=\"DB\" class=\"detail\">' || DB || '</a>' DB,
				'<a data-school=\"' || school_number || '\" data-disability=\"DD\" class=\"detail\">' || DD || '</a>' DD,
				'<a data-school=\"' || school_number || '\" data-disability=\"ED\" class=\"detail\">' || ED || '</a>' ED,
				'<a data-school=\"' || school_number || '\" data-disability=\"HI\" class=\"detail\">' || HI || '</a>' HI,
				'<a data-school=\"' || school_number || '\" data-disability=\"ID\" class=\"detail\">' || ID || '</a>' ID,
				'<a data-school=\"' || school_number || '\" data-disability=\"MD\" class=\"detail\">' || MD || '</a>' MD,
				'<a data-school=\"' || school_number || '\" data-disability=\"OHI\" class=\"detail\">' || OHI || '</a>' OHI,
				'<a data-school=\"' || school_number || '\" data-disability=\"OI\" class=\"detail\"' || OI || '</a>' OI,
				'<a data-school=\"' || school_number || '\" data-disability=\"SLD\" class=\"detail\">' || SLD || '</a>' SLD,
				'<a data-school=\"' || school_number || '\" data-disability=\"SLI\" class=\"detail\">' || SLI || '</a>' SLI,
				'<a data-school=\"' || school_number || '\" data-disability=\"TBI\" class=\"detail\">' || TBI || '</a>' TBI,
				'<a data-school=\"' || school_number || '\" data-disability=\"VI\" class=\"detail\">' || VI || '</a>' VI,
				LEAD (CASE WHEN school_name IS NOT NULL THEN chr(44) END)
				OVER (order by high_grade,school_name ASC) comma
				FROM (
				SELECT
				     schl.name school_name,
				     schl.school_number,
				     schl.high_grade,
				     to_number(st.disability_code) disability_code,
				     count(st.disability_code) ttl
				FROM ps_enrollment_all enr
				JOIN (
				     SELECT
				          s.id studentid,
				          s.entrydate,
				          s.exitdate,
				          ps_customfields.getstudentscf(s.id, 'va_primary_dis_code') disability_code,
				          CASE
				               WHEN to_char(NVL(ps_customfields.getstudentscf(s.id, 'va_servingdistrict'),~[displaypref:districtnumber]), 'FM000') || to_char(ps_customfields.getstudentscf(s.id, 'va_servingschool'),'FM0000') IN
				                    (~[displaypref:vrb_nm_schools])
				               THEN
				                    NVL(ps_customfields.getstudentscf(s.id, 'va_responsibleschool'),s.schoolid)
				               ELSE
				                    NVL(ps_customfields.getstudentscf(s.id, 'va_servingschool'),s.schoolid)
				          END responsible_school
				     FROM students s
				     WHERE
				          ps_customfields.getstudentscf(s.id, 'va_primary_dis_code') IS NOT NULL AND
				          ps_customfields.getstudentscf(s.id, 'va_np_fte') IS NULL AND
				          s.exitdate > s.entrydate
				     UNION ALL
				     SELECT
				          re.studentid,
				          re.entrydate,
				          re.exitdate,
				          ps_customfields.getcf('reenrollments', re.id, 'va_primary_dis_code') disability_code,
				          CASE
				               WHEN to_char(NVL(ps_customfields.getcf('reenrollments',re.id,'va_servingdistrict'),~[displaypref:districtnumber]),'FM000') || to_char(ps_customfields.getcf('reenrollments',re.id,'va_servingschool'),'FM0000') IN
				                    (~[displaypref:vrb_nm_schools])
				               THEN
				                    NVL(ps_customfields.getcf('reenrollments',re.id,'va_responsibleschool'),re.schoolid)
				               ELSE
				                    NVL(ps_customfields.getcf('reenrollments',re.id,'va_servingschool'),re.schoolid)
				          END responsible_school
				     FROM reenrollments re
				     WHERE
				          ps_customfields.getcf('reenrollments',re.id,'va_primary_dis_code') IS NOT NULL AND
				          ps_customfields.getcf('reenrollments',re.id,'va_np_fte') IS NULL AND
				          re.exitdate > re.entrydate
				     ) st ON st.studentid = enr.studentid AND st.entrydate = enr.entrydate AND st.exitdate = enr.exitdate
				JOIN schools schl ON schl.school_number = st.responsible_school
				WHERE
				     to_date('~[gpv:snapshotDate]','MM/DD/YYYY') BETWEEN enr.entrydate AND enr.exitdate AND enr.exitdate > enr.entrydate
				     GROUP BY schl.name, schl.high_grade, st.disability_code, schl.school_number
				) PIVOT (
				     sum(ttl)
				     FOR disability_code IN (
				          13 AUT,
				          12 DB,
				          16 DD,
				          8 ED,
				          6 HI,
				          19 ID,
				          3 MD,
				          10 OHI,
				          4 OI,
				          7 SLD,
				          9 SLI,
				          14 TBI,
				          5 VI
				     )
			) ORDER BY high_grade,school_name ASC;
			]{
				"school_name":"~(school_name)",
			"AUT":"~(AUT)",
			"DB":"~(DB)",
			"DD":"~(DD)",
			"ED":"~(ED)",
			"HI":"~(HI)",
			"ID":"~(ID)",
			"MD":"~(MD)",
			"OHI":"~(OHI)",
			"OI":"~(OI)",
			"SLD":"~(SLD)",
			"SLI":"~(SLI)",
			"TBI":"~(TBI)",
			"VI":"~(VI)"
			}~(comma)[/tlist_sql]
	],
	
	"aoColumns": [
		{"mDataProp":"school_name","sTitle":"School Name"},
		{"mDataProp":"AUT","sTitle":"AUT"},
		{"mDataProp":"DB","sTitle":"DB"},
		{"mDataProp":"DD","sTitle":"DD"},
		{"mDataProp":"ED","sTitle":"ED"},
		{"mDataProp":"HI","sTitle":"HI"},
		{"mDataProp":"ID","sTitle":"ID"},
		{"mDataProp":"MD","sTitle":"MD"},
		{"mDataProp":"OHI","sTitle":"OHI"},
		{"mDataProp":"OI","sTitle":"OI"},
		{"mDataProp":"SLD","sTitle":"SLD"},
		{"mDataProp":"SLI","sTitle":"SLI"},
		{"mDataProp":"TBI","sTitle":"TBI"},
		{"mDataProp":"VI","sTitle":"VI"}
	],
    "sDom": "T<\"H\"fr>t<\"F\"ip>",
    "oTableTools": {
        "sSwfPath": "/scripts/vrb/DataTables/extras/TableTools/media/swf/copy_csv_xls_pdf.swf"
    },
    "bJQueryUI": true,
    "bPaginate": false,
	"bFilter": false
}
