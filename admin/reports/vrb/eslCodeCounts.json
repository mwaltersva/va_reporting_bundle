{
	"aaData": [
		~[tlist_sql;
			SELECT
				school_name,
				ReceivingServices,
				RefusedServices,
				FormerlyLEP,
				LEAD (CASE WHEN school_name IS NOT NULL THEN chr(44) ELSE NULL END)
				OVER (ORDER BY school_name ASC) comma
			FROM (
				SELECT
					schl.name school_name,
					ps_customfields.getstudentscf(s.id, 'va_lep_serv_cd') esl_code,
					enr.studentid studentid
				FROM (
				     SELECT
				          s.id studentid,
				          s.entrydate,
				          s.exitdate,
				          CASE
				               WHEN to_char(ps_customfields.getstudentscf(s.id, 'va_servingdistrict'), 'FM000') || to_char(ps_customfields.getstudentscf(s.id, 'va_servingschool'),'FM0000') IN
				                    (~[displaypref:vrb_nm_schools])
				               THEN
				                    NVL(ps_customfields.getstudentscf(s.id, 'va_responsibleschool'),s.schoolid)
				               ELSE
				                    NVL(ps_customfields.getstudentscf(s.id, 'va_servingschool'),s.schoolid)
				          END responsible_school
				     FROM students s
				     WHERE
				          ps_customfields.getstudentscf(s.id, 'va_np_fte') IS NULL
				     UNION ALL
				     SELECT
				          re.studentid,
				          re.entrydate,
				          re.exitdate,
				          CASE
				               WHEN to_char(ps_customfields.getcf('reenrollments',re.id,'va_servingdistrict'),'FM000') || to_char(ps_customfields.getcf('reenrollments',re.id,'va_servingschool'),'FM0000') IN
				                    (~[displaypref:vrb_nm_schools])
				               THEN
				                    NVL(ps_customfields.getcf('reenrollments',re.id,'va_responsibleschool'),re.schoolid)
				               ELSE
				                    NVL(ps_customfields.getcf('reenrollments',re.id,'va_servingschool'),re.schoolid)
				          END responsible_school
				     FROM reenrollments re
				     WHERE
				          ps_customfields.getcf('reenrollments',re.id,'va_np_fte') IS NULL
				) enr
				JOIN students s ON s.id = enr.studentid
				JOIN schools schl ON schl.school_number = enr.responsible_school
				WHERE
					ps_customfields.getstudentscf(s.id, 'va_lep_serv_cd') IS NOT NULL AND
					to_date('~[gpv:snapshot_Date]','MM/DD/YYYY') BETWEEN enr.entrydate AND enr.exitdate AND
					enr.exitdate > enr.entrydate
			) PIVOT (
				count(studentid)
				FOR esl_code IN(
					1 ReceivingServices,
					2 RefusedServices,
					3 FormerlyLep
				)
			) ORDER BY school_name ASC;
		]{
			"school_name":"~(school_name)",
			"receiving_services":~(receivingservices),
			"refused_services":~(refusedservices),
			"formerly_lep":~(formerlylep)
		}~(comma)[/tlist_sql]
	],
	
	"aoColumns": [
		{"mDataProp":"school_name","sTitle":"School Name"},
		{"mDataProp":"receiving_services","sTitle":"Receiving Services"},
		{"mDataProp":"refused_services","sTitle":"Refused Services"},
		{"mDataProp":"formerly_lep","sTitle":"Formerly LEP"}
	],
    "sDom": "T<\"H\"fr>t<\"F\"ip>",
    "oTableTools": {
        "sSwfPath": "/scripts/vrb/DataTables/extras/TableTools/media/swf/copy_csv_xls_pdf.swf"
    },
    "bJQueryUI": true,
    "bPaginate": false,
	"bFilter": false
}
